#include <ESP8266WiFi.h>

const char* ssid = "YOUR_SSID";         // Replace with your WiFi SSID
const char* password = "YOUR_PASSWORD"; // Replace with your WiFi password

// Define GPIO pin for the relay
#define RELAY_PIN D1

// Variable to store the relay state (ON/OFF)
bool relayState = false;

WiFiServer server(80);

void setup() {
  // Set relay pin as output
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH); // Initial state of the relay (OFF)

  // Start Serial Communication
  Serial.begin(115200);
  delay(10);

  // Connect to Wi-Fi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  // Start the web server
  server.begin();
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }

  // Wait until the client sends some data
  Serial.println("New Client.");
  String currentLine = "";                // Make a string to hold incoming data from the client
  while (client.connected()) {
    if (client.available()) {
      char c = client.read();             // Read a byte from the client
      Serial.write(c);                    // Print the byte to the Serial Monitor
      if (c == '\n') {
        // If the current line is blank, you got two newline characters in a row.
        if (currentLine.length() == 0) {
          // HTTP response header
          client.println("HTTP/1.1 200 OK");
          client.println("Content-type:text/html");
          client.println();

          // HTML content
          client.println("<html>");
          client.println("<head><title>Home Automation</title></head>");
          client.println("<body style='text-align:center;'>");
          client.println("<h1>NodeMCU ESP8266 Web Server</h1>");
          client.println("<h2>Control Your Devices</h2>");

          // Relay control buttons
          if (relayState) {
            client.println("<p>Device Status: ON</p>");
            client.println("<a href=\"/off\"><button>TURN OFF</button></a><br/><br/>");
          } else {
            client.println("<p>Device Status: OFF</p>");
            client.println("<a href=\"/on\"><button>TURN ON</button></a><br/><br/>");
          }

          client.println("</body></html>");

          // End the HTTP response
          client.println();
          break;
        } else { // Clear the current line
          currentLine = "";
        }
      } else if (c != '\r') { // Add character to the currentLine string
        currentLine += c;
      }

      // Check if the client requested "/on" or "/off" to control the relay
      if (currentLine.endsWith("GET /on")) {
        relayState = true;
        digitalWrite(RELAY_PIN, LOW); // Turn on the relay (active LOW)
      }
      if (currentLine.endsWith("GET /off")) {
        relayState = false;
        digitalWrite(RELAY_PIN, HIGH); // Turn off the relay (active LOW)
      }
    }
  }

  // Close the connection
  client.stop();
  Serial.println("Client Disconnected.");
}
